extends layout

block head
  title CLI - TotT

block slides

  section
    h1 CLI
    h2 TotT 2014

  section
    h2 Command Line Interface
    blockquote "a means of interacting with a computer program where the user (or client) issues commands to the program in the form of successive lines of text." <br />- <a href="http://en.wikipedia.org/wiki/Command-line_interface">Wikipedia</a>

  section
    h2 Use Cases
    ul
      li Large vocab interaction
      li Remote work
      li Constrained environments
      li Automation
      li Toolchains

  section
    h2 Tools
    p We'll bootstrap our work with four:
    ol
      li Bash
      li SSH
      li Vi
      li Screen

  section
    h2 Bash Shell
    ul
      li Command language interpreter
      li Reads commands from user or script
      li Concerned with manipulation of files, execution of other programs

  section
    h2 Bash Language
    ul
      li Scripting language to automate shell functions
      li Has constructs like loops and conditionals
    pre
      code.
        #!/bin/bash

        if [ -z "$1" ]; then
          echo "Hello, World!"
        else
          echo "Hello, $1!"
        fi

  section
    h2 Basic Bash Concepts
    ul
      li File
      li Directory
      li Session
      li Process
      li Script

  section
    h2 Demo: Bash Basics
    p pwd, ls, cd, mkdir, touch, cp, mv, less, man

  section
    h2 Demo: Bash Basics++
    p find, grep, history, pkill

  section
    h2 Secure Shell (SSH)
    blockquote "cryptographic network protocol for secure data communication, remote command-line login, remote command execution, and other secure network services between two networked computers" <br />- <a href="http://en.wikipedia.org/wiki/Secure_Shell">Wikipedia</a>

  section
    h2 SSH Client
    ul
      li <tt>ssh</tt>
      li Establishes a secure connection with a remote machine
      li Runs a shell session through the connection
      li Can tunnel other traffic too

  section
    h2 SSH Basics
    pre
      code.
        # start a remote shell session
        $ ssh some.machine.com

        # run a remote command
        $ ssh some.machine.com 'cd my_scripts; ./do_stuff.sh'

        # start a remote shell session on a vagrant box
        $ vagrant ssh

        # copy a file from remote to local
        $ scp some.machine.com:my_scripts/do_stuff.sh .

  section
    h2 Other SSH Topics
    p Google these if interested:
    ul
      li Tunneling
      li Port forwarding
      li Secure file transfer
      li Pub-key auth
      li <tt>~/.ssh/config</tt>

  section
    h2 vi
    ul
      li Screen oriented text editor
      li Modal: <em>insert</em> or <em>normal</em> mode
      li Good for remote editing over ssh
      li Some people swear by it for all work

  section
    h2 Demo: Simple Editing
    p Navigation, modes, yanking, pasting, deleting, saving, quitting

  section
    h2 More vi Commands
    ul
      li Google for a vi cheat sheet. There's tons.
      li For example: <a href="http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html">vi Graphical Cheat Sheet</a>

  section
    h2 GNU Screen
    ul
      li CLI window manager
      li Allows fast switching among shell sessions
      li Allows detached process execution

  section
    h2 Running / Resuming Screens
    pre
      code.
        # start a new screen
        $ screen

        # start a new named screen
        $ screen -S my_name

        # list running screens
        $ screen -ls

        # connect to a running screen
        $ screen -rx my_name

  section
    h2 Demo: Working in Screen
    p Create window, switch window, kill window, rename window, scrollback, disconnect

  section
    h2 More Screen Commands
    ul
      li Again, Google for a cheat sheet.
      li Or see the <a href="http://www.gnu.org/software/screen/manual/screen.html">GNU Screen manual</a>.

  section
    h2 Demo: Writing Scripts Remotely
    p ssh, screen, vi, bash

  section
    h2 Review
    ul
      li CLI
      li Bash
      li SSH
      li Vi
      li Screen