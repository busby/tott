extends layout

block head
  title Tools of the Trade

block slides

  section(data-narration="/git/0.mp3")
    h1 Git Basics
    h2 TotT: 2014

  section(data-narration="/git/1.mp3")
    h2 DVCS
    blockquote "a distributed version control system ... keeps track of software revisions and allows many developers to work on a given project without requiring that they maintain a connection to a common network." <br />- <a href="http://en.wikipedia.org/wiki/Distributed_revision_control">Wikipedia</a>

  section(data-narration="/git/2.mp3")
    h2 Use Cases
    ul
      li Keep backups
      li Revert to old versions
      li Track incremental changes
      li Merge concurrent changes
      li Explore alternatives safely
      li Encourage collaboration

  section(data-narration="/git/3.mp3")
    h2 Git
    blockquote "Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency." <br />- <a href="http://git-scm.com/">git-scm.com</a>

  section(data-narration="/git/4.mp3")
    h2 Git by the Lingo
    p A review if you've done the prep readings ...
  section(data-narration="/git/5.mp3")
    h2 Git is a command line tool, <tt>git</tt>.
    p Really, it's a set of tools.
  section(data-narration="/git/6.mp3")
    h2 Git <em>repositories</em> track files and their changes over time.
    p i.e., files and their history
  section(data-narration="/git/7.mp3")
    h2 You edit the files in a <em>working copy</em> of a repository.
    p i.e., a directory of files and subdirectories
  section(data-narration="/git/8.mp3")
    h2 You <em>stage</em> working copy changes for tracking.
    p e.g., code for features, not debugging
  section(data-narration="/git/9.mp3")
    h2 You <em>commit</em> staged changes to the history.
    p e.g., when unit tests pass, when code is stable
  section(data-narration="/git/10.mp3")
    h2 Your repository may have many histories, or <em>branches</em>.
    p e.g., for stable code, for feature dev, for experimentation
  section(data-narration="/git/11.mp3")
    h2 You may <em>merge</em> branches at will.
    p e.g., to merge a feature branch into the master branch
  section(data-narration="/git/12.mp3")
    h2 You may <em>pull</em> commits into your repository from other repositories.
    p e.g., to get code from a colleague
  section(data-narration="/git/13.mp3")
    h2 You may <em>push</em> commits from your repository to other repositories.
    p e.g., to deliver a feature
  section(data-narration="/git/14.mp3")
    h2 Sometimes, you must resolve <em>conflicts</em> when merging.
    p e.g., when you and another dev commit changes to the same line

  section(data-narration="/git/15.mp3")
    h2 Demo: Personal, Single Branch Workflow
    p init, add, checkout, status, commit, log

  section
    video(src="#{process.env['VIDEO_ROOT']}/git/single-branch.mov", width="960", autoplay)

  section
    h2 Demo: Personal, Multi-Branch Workflow
    p checkout, branch, merge

  section
    h2 Review
    ul
      li DVCS
      li Git
