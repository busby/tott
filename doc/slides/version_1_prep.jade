extends layout

block head
  title Tools of the Trade

block slides

  section.slide#title
    .vcenter
      h1 Prep: Git Basics
      p.subtitle TotT: 2014

  section.slide#dvcs
    h2 DVCS
    blockquote "a distributed version control system ... keeps track of software revisions and allows many developers to work on a given project without requiring that they maintain a connection to a common network." <br />- <a href="http://en.wikipedia.org/wiki/Distributed_revision_control">Wikipedia</a>

  section.slide#use-cases
    h2 Use Cases
    ul
      li Keep backups
      li Revert to old versions
      li Track incremental changes
      li Merge concurrent changes
      li Explore alternatives safely
      li Encourage collaboration

  section.slide#git
    h2 Git
    blockquote "Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency." <br />- <a href="http://git-scm.com/">git-scm.com</a>

  section.slide#summary
    .vcenter
      h2 Git by the Lingo
      h3 A review if you've done the prep readings ...

  section.slide#summary-1
    .vcenter
      h2 Git is a command line tool, <tt>git</tt>.
      h3 Really, it's a set of tools.
  section.slide#summary-2
    .vcenter
      h2 Git <em>repositories</em> track files and their changes over time.
      h3 i.e., files and their history
  section.slide#summary-3
    .vcenter
      h2 You edit the files in a <em>working copy</em> of a repository.
      h3 i.e., a directory of files and subdirectories
  section.slide#summary-4
    .vcenter
      h2 You <em>stage</em> working copy changes for tracking.
      h3 e.g., code for features, not debugging
  section.slide#summary-5
    .vcenter
      h2 You <em>commit</em> staged changes to the history.
      h3 e.g., when unit tests pass, when code is stable
  section.slide#summary-6
    .vcenter
      h2 Your repository may have many histories, or <em>branches</em>.
      h3 e.g., for stable code, for feature dev, for experimentation
  section.slide#summary-7
    .vcenter
      h2 You may <em>merge</em> branches at will.
      h3 e.g., to merge a feature branch into the master branch
  section.slide#summary-8
    .vcenter
      h2 You may <em>pull</em> commits into your repository from other repositories.
      h3 e.g., to get code from a colleague
  section.slide#summary-9
    .vcenter
      h2 You may <em>push</em> commits from your repository to other repositories.
      h3 e.g., to deliver a feature
  section.slide#summary-10
    .vcenter
      h2 Sometimes, you must resolve <em>conflicts</em> when merging.
      h3 e.g., different changes to the same code across branches

  section.slide#demo
    .vcenter
      h2 Demo: Personal, Single Branch Workflow
      h3 init, add, checkout, status, commit, log

  section.slide#meet
    h2 When We Meet Again
    ul
      li I will summarize this material.
      li I will demonstrate a multi-branch workflow.
      li You will practice using Git.
      li We will discuss what you learned.